<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <RazorSdkDirectoryRoot>$(RazorSdkArtifactsDirectory)$(Configuration)\sdk-output\</RazorSdkDirectoryRoot>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <RuntimeAdditionalRestoreSources Condition="'$(RuntimeAdditionalRestoreSources)' == ''">$(MSBuildThisFileDirectory)..\TestPackageRestoreSource\</RuntimeAdditionalRestoreSources>
    <RestoreSources>
      $(RestoreSources);
      $(RuntimeAdditionalRestoreSources)
    </RestoreSources>
  </PropertyGroup>

  <ItemGroup>
    <!-- Avoid referencing the AspNetCore framework since we want the ability to target work-in-progress shims -->
    <FrameworkReference Remove="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <PropertyGroup Condition="'$(RunningAsTest)' == ''">
    <!-- We don't want to run build server when not running as tests. -->
    <UseRazorBuildServer>false</UseRazorBuildServer>
  </PropertyGroup>

  <!-- Test Placeholder -->

  <ItemGroup>
    <PackageReference Include="PackageLibraryDirectDependency" Version="1.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ClassLibrary2\ClassLibrary2.csproj" />
  </ItemGroup>

  <PropertyGroup Condition="'$(BinariesRoot)'==''">
    <!-- In test scenarios $(BinariesRoot) is defined in a generated Directory.Build.props file -->
    <BinariesRoot>$(RepositoryRoot)artifacts\bin\Microsoft.AspNetCore.Razor.Test.MvcShim.ClassLib\$(Configuration)\netstandard2.0\</BinariesRoot>
  </PropertyGroup>

  <PropertyGroup>
    <CreateStaticWebAssetsInputsCacheFileDependsOn>
      $(CreateStaticWebAssetsInputsCacheFileDependsOn);
      UpdateContainerPaths
    </CreateStaticWebAssetsInputsCacheFileDependsOn>
  </PropertyGroup>

  <Target
    Name="UpdateContainerPaths"
    DependsOnTargets="ResolveStaticWebAssetContentRoots"
    Condition="'$(UpdatePathsForDocker)' == 'true'">

    <PropertyGroup>
      <!-- This simulates re-mapping the path into a container folder -->
      <ContainerNugetFolder>/app/packages/</ContainerNugetFolder>
      <!-- This is normally $(SolutionDir) -->
      <ContainerSolutionFolder>/app/</ContainerSolutionFolder>
    </PropertyGroup>

    <ItemGroup>
      <UpdatedPackageContentRoot
        Condition="$([System.String]::new('%(StaticWebAssetContentRoot.Identity)').StartsWith('$(PackagesRoot)'))"
        Include="@(StaticWebAssetContentRoot->'$([System.String]::new('%(Identity)').Replace('$(PackagesRoot)','$(ContainerNugetFolder)').Replace('\','/'))')">
        <OriginalPath>%(Identity)</OriginalPath>
      </UpdatedPackageContentRoot>

      <UpdatedPackageContentRoot
        Condition="$([System.String]::new('%(StaticWebAssetContentRoot.Identity)').StartsWith('$(SolutionFolder)'))"
        Include="@(StaticWebAssetContentRoot->'$([System.String]::new('%(Identity)').Replace('$(SolutionFolder)','$(ContainerSolutionFolder)').Replace('\','/'))')">
        <OriginalPath>%(Identity)</OriginalPath>
      </UpdatedPackageContentRoot>

      <StaticWebAssetContentRoot Remove="@(UpdatedPackageContentRoot->'%(OriginalPath)')" />
      <StaticWebAssetContentRoot Include="@(UpdatedPackageContentRoot)" />
    </ItemGroup>
  </Target>

  <ItemGroup Condition="'$(BinariesRoot)'!=''">
    <Reference Include="$(BinariesRoot)\Microsoft.AspNetCore.Razor.Test.ComponentShim.dll" />
    <Reference Include="$(BinariesRoot)\Microsoft.AspNetCore.Razor.Test.MvcShim.ClassLib.dll" />
  </ItemGroup>

</Project>
